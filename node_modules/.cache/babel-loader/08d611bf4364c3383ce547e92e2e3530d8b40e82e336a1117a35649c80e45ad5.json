{"ast":null,"code":"var _jsxFileName = \"/Users/amacshri/wireframetodoapp/src/components/ListByTaskName.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListByTaskName = () => {\n  _s();\n  const [taskDetails, setTaskDetails] = useState(null);\n  useEffect(() => {\n    const fetchTaskDetails = async () => {\n      if (selectedTaskName) {\n        try {\n          const response = await UserService.getTaskByTaskName(encodeURIComponent(selectedTaskName));\n          setTaskDetails(response.data);\n        } catch (error) {\n          console.error('Error fetching task details:', error);\n          // Handle error, e.g., show an error message to the user\n        }\n      }\n    };\n    fetchTaskDetails();\n  }, [selectedTaskName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: taskDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"###### Details for Task #######\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"id: \", taskDetails.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"TaskName: \", taskDetails.taskName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"StartDate: \", taskDetails.startDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"EnDate: \", taskDetails.endDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"TaskStatus: \", taskDetails.taskStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"TotalEffortReq: \", taskDetails.totalEffortReq]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 4\n  }, this);\n};\n_s(ListByTaskName, \"31mcqY1KPd5b/uHLGtUWbzz5TNw=\");\n_c = ListByTaskName;\nexport default ListByTaskName;\nvar _c;\n$RefreshReg$(_c, \"ListByTaskName\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ListByTaskName","_s","taskDetails","setTaskDetails","fetchTaskDetails","selectedTaskName","response","UserService","getTaskByTaskName","encodeURIComponent","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","id","taskName","startDate","endDate","taskStatus","totalEffortReq","_c","$RefreshReg$"],"sources":["/Users/amacshri/wireframetodoapp/src/components/ListByTaskName.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ListByTaskName = () => {\n\n    const [taskDetails, setTaskDetails] = useState(null);\n\n    useEffect(() => {\n        const fetchTaskDetails = async () => {\n          if (selectedTaskName) {\n            try {\n              const response = await UserService.getTaskByTaskName(encodeURIComponent(selectedTaskName));\n              setTaskDetails(response.data);\n            } catch (error) {\n              console.error('Error fetching task details:', error);\n              // Handle error, e.g., show an error message to the user\n            }\n          }\n        };\n    \n        fetchTaskDetails();\n      }, [selectedTaskName]);\n\nreturn (\n   <div>\n      {taskDetails && (\n      <div>\n      <h4>###### Details for Task #######</h4>\n      <p>id: {taskDetails.id}</p>\n      <p>TaskName: {taskDetails.taskName}</p>\n      <p>StartDate: {taskDetails.startDate}</p>\n      <p>EnDate: {taskDetails.endDate}</p>\n      <p>TaskStatus: {taskDetails.taskStatus}</p>\n      <p>TotalEffortReq: {taskDetails.totalEffortReq}</p>\n     </div>\n     )}\n    </div>\n  );\n};\n  export default ListByTaskName;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZ,MAAMO,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAIC,gBAAgB,EAAE;QACpB,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMC,WAAW,CAACC,iBAAiB,CAACC,kBAAkB,CAACJ,gBAAgB,CAAC,CAAC;UAC1FF,cAAc,CAACG,QAAQ,CAACI,IAAI,CAAC;QAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;UACpD;QACF;MACF;IACF,CAAC;IAEDP,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACC,gBAAgB,CAAC,CAAC;EAE5B,oBACGN,OAAA;IAAAc,QAAA,EACIX,WAAW,iBACZH,OAAA;MAAAc,QAAA,gBACAd,OAAA;QAAAc,QAAA,EAAI;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxClB,OAAA;QAAAc,QAAA,GAAG,MAAI,EAACX,WAAW,CAACgB,EAAE;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BlB,OAAA;QAAAc,QAAA,GAAG,YAAU,EAACX,WAAW,CAACiB,QAAQ;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvClB,OAAA;QAAAc,QAAA,GAAG,aAAW,EAACX,WAAW,CAACkB,SAAS;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzClB,OAAA;QAAAc,QAAA,GAAG,UAAQ,EAACX,WAAW,CAACmB,OAAO;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpClB,OAAA;QAAAc,QAAA,GAAG,cAAY,EAACX,WAAW,CAACoB,UAAU;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3ClB,OAAA;QAAAc,QAAA,GAAG,kBAAgB,EAACX,WAAW,CAACqB,cAAc;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEV,CAAC;AAAChB,EAAA,CAnCID,cAAc;AAAAwB,EAAA,GAAdxB,cAAc;AAoClB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}