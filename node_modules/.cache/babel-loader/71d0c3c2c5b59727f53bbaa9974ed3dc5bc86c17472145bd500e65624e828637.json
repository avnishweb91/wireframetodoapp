{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import UserService from'../services/UserService';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ListUserComponent=()=>{const[tasks,setTasks]=useState([]);const navigate=useNavigate();const isUpdateOlderThan10Days=endDate=>{const currentDate=new Date();const updateDate=new Date(endDate);const timeDifference=currentDate-updateDate;const daysDifference=Math.floor(timeDifference/(1000*60*60*24));return daysDifference>10;};const getSymbolicRepresentation=task=>{if(isUpdateOlderThan10Days(task.lastUpdateDate)){return\"🔴\";// Red symbol for older than 10 days\n}else{switch(task.taskStatus){case'Completed':return\"✔️\";// Green checkmark for Completed\ncase'InProgress':return\"🟡\";// Yellow circle for In Progress\ncase'ReviewDo':return\"🟠\";// Orange circle for Pending\ndefault:return\"\";// Empty string for other cases\n}}};const buttonContainerStyle={display:'flex',justifyContent:'space-between'};const buttonStyle={margin:'10px 20px',padding:'15px 20px',fontSize:'16px',borderRadius:'5px',border:'none',cursor:'pointer'};const buttonView={...buttonStyle,backgroundColor:'#3498db',// Blue color\ncolor:'#fff'// White text\n};const editTask=id=>{navigate(\"/update/\".concat(id));};const handleGoBack=()=>{navigate('/viewTask');};const handleLogout=()=>{// Perform logout logic (clear authentication information, etc.)\n// For demonstration purposes, simply redirecting to the login page\nnavigate('/');};useEffect(()=>{const fetchTasks=async()=>{try{const response=await UserService.getAllTasks();setTasks(response.data);}catch(error){console.error('Error fetching tasks:',error);}};fetchTasks();},[]);// Empty dependency array means this effect runs once when the component mounts\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-center\",children:\"Task List\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"table\",{className:\"table table-striped table-bordered\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Id\"}),/*#__PURE__*/_jsx(\"th\",{children:\"TaskName\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"th\",{children:\"StartDate\"}),/*#__PURE__*/_jsx(\"th\",{children:\"EndDate\"}),/*#__PURE__*/_jsx(\"th\",{children:\"TaskStatus\"}),/*#__PURE__*/_jsx(\"th\",{children:\"TotalEffortReq\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:tasks.map(task=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:task.id}),/*#__PURE__*/_jsx(\"td\",{children:task.taskName}),/*#__PURE__*/_jsx(\"td\",{children:task.description}),/*#__PURE__*/_jsx(\"td\",{children:task.startDate}),/*#__PURE__*/_jsx(\"td\",{children:task.endDate}),/*#__PURE__*/_jsxs(\"td\",{style:{backgroundColor:isUpdateOlderThan10Days(task.endDate)?'red':task.taskStatus==='Completed'?'green':task.taskStatus==='InProgress'?'yellow':task.taskStatus==='ReviewDo'?'orange':'inherit'},children:[getSymbolicRepresentation(task),\" \",task.taskStatus]}),/*#__PURE__*/_jsx(\"td\",{children:task.totalEffortReq}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>editTask(task.id),className:\"btn btn-info\",children:\"Update\"})})]},task.id))})]}),/*#__PURE__*/_jsxs(\"div\",{style:buttonContainerStyle,children:[/*#__PURE__*/_jsx(\"button\",{style:buttonView,onClick:handleGoBack,children:\"Go Back\"}),/*#__PURE__*/_jsx(\"div\",{style:{position:'relative'},children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleLogout,style:{position:'absolute',bottom:'240px',right:'10px'},children:\"Logout\"})})]})]})]});};export default ListUserComponent;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","UserService","jsx","_jsx","jsxs","_jsxs","ListUserComponent","tasks","setTasks","navigate","isUpdateOlderThan10Days","endDate","currentDate","Date","updateDate","timeDifference","daysDifference","Math","floor","getSymbolicRepresentation","task","lastUpdateDate","taskStatus","buttonContainerStyle","display","justifyContent","buttonStyle","margin","padding","fontSize","borderRadius","border","cursor","buttonView","backgroundColor","color","editTask","id","concat","handleGoBack","handleLogout","fetchTasks","response","getAllTasks","data","error","console","children","className","map","taskName","description","startDate","style","totalEffortReq","onClick","position","type","bottom","right"],"sources":["/Users/amacshri/wireframetodoapp/src/components/ListUserComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport UserService from '../services/UserService';\n\nconst ListUserComponent = () => {\n  const [tasks, setTasks] = useState([]);\n  const navigate = useNavigate();\n\n  const isUpdateOlderThan10Days = (endDate) => {\n    const currentDate = new Date();\n    const updateDate = new Date(endDate);\n    const timeDifference = currentDate - updateDate;\n    const daysDifference = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\n    return daysDifference > 10;\n  };\n\n  const getSymbolicRepresentation = (task) => {\n    if (isUpdateOlderThan10Days(task.lastUpdateDate)) {\n      return \"🔴\"; // Red symbol for older than 10 days\n    } else {\n      switch (task.taskStatus) {\n        case 'Completed':\n          return \"✔️\"; // Green checkmark for Completed\n        case 'InProgress':\n          return \"🟡\"; // Yellow circle for In Progress\n        case 'ReviewDo':\n          return \"🟠\"; // Orange circle for Pending\n        default:\n          return \"\"; // Empty string for other cases\n      }\n    }\n  };\n\n  const buttonContainerStyle = {\n    display: 'flex',\n    justifyContent: 'space-between',\n  };\n\n  const buttonStyle = {\n    margin: '10px 20px',\n    padding: '15px 20px',\n    fontSize: '16px',\n    borderRadius: '5px',\n    border: 'none',\n    cursor: 'pointer',\n  };\n\n  const buttonView = {\n    ...buttonStyle,\n    backgroundColor: '#3498db', // Blue color\n    color: '#fff', // White text\n  };\n\n  const editTask = (id) => {\n    navigate(`/update/${id}`);\n  };\n\n  const handleGoBack = () => {\n    navigate('/viewTask');\n    };\n\n    const handleLogout = () => {\n      // Perform logout logic (clear authentication information, etc.)\n      // For demonstration purposes, simply redirecting to the login page\n       navigate('/');\n    };\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await UserService.getAllTasks();\n        setTasks(response.data);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n\n    fetchTasks();\n  }, []); // Empty dependency array means this effect runs once when the component mounts\n\n  return (\n    <div>\n      <h2 className=\"text-center\">Task List</h2>\n      <div className=\"row\">\n        <table className=\"table table-striped table-bordered\">\n          <thead>\n            <tr>\n              <th>Id</th>\n              <th>TaskName</th>\n              <th>Description</th>\n              <th>StartDate</th>\n              <th>EndDate</th>\n              <th>TaskStatus</th>\n              <th>TotalEffortReq</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tasks.map((task) => (\n              <tr key={task.id}>\n                <td>{task.id}</td>\n                <td>{task.taskName}</td>\n                <td>{task.description}</td>\n                <td>{task.startDate}</td>\n                <td>{task.endDate}</td>\n                <td style={{\n                  backgroundColor: isUpdateOlderThan10Days(task.endDate) ? 'red' :\n                    task.taskStatus === 'Completed' ? 'green' :\n                      task.taskStatus === 'InProgress' ? 'yellow' :\n                        task.taskStatus === 'ReviewDo' ? 'orange' : 'inherit'\n                }}>\n                  {getSymbolicRepresentation(task)} {task.taskStatus}\n                </td>\n                <td>{task.totalEffortReq}</td>\n                <td>\n                  <button onClick={() => editTask(task.id)} className=\"btn btn-info\">\n                    Update\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <div style={buttonContainerStyle}>\n        <button style={buttonView} onClick={handleGoBack}>\n        Go Back\n        </button>\n        <div style={{ position: 'relative' }}>\n      <button\n        type=\"button\"\n        onClick={handleLogout}\n        style={{\n          position: 'absolute',\n          bottom: '240px',\n          right: '10px',\n        }}\n      >\n        Logout\n      </button>\n      </div>\n      </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListUserComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}