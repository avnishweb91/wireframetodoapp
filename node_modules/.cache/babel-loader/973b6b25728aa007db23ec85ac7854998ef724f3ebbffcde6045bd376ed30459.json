{"ast":null,"code":"var _jsxFileName = \"/Users/amacshri/wireframetodoapp/src/components/ViewTaskComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport UserService from '../services/UserService';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewTaskComponent = ({\n  ToDoAppTest\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const buttonContainerStyle = {\n    display: 'flex',\n    justifyContent: 'space-between'\n  };\n  const buttonStyle = {\n    margin: '10px 20px',\n    padding: '15px 20px',\n    fontSize: '16px',\n    borderRadius: '5px',\n    border: 'none',\n    cursor: 'pointer'\n  };\n  const buttonView = {\n    ...buttonStyle,\n    backgroundColor: '#3498db',\n    // Blue color\n    color: '#fff' // White text\n  };\n  const [task, setTask] = useState([]);\n  const viewAllTask = () => {\n    navigate(`/list/all`);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // If taskIdentifier is not a number, fetch by taskName\n        const response = await UserService.getTaskByTaskName(taskName);\n        setTask(response.data);\n      } catch (error) {\n        console.error('Error fetching task:', error);\n        // Handle error, e.g., show an error message to the user\n      }\n    };\n    fetchData();\n  }, [taskName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"List of Items for User TaskName: \", taskName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: task.map(taskdetails => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: taskdetails.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), \": \", taskdetails.description]\n      }, taskdetails.taskName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: buttonContainerStyle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: buttonView,\n          onClick: viewAllTask,\n          children: \"ViewAllTask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewTaskComponent, \"dd6pX2QtHFuJUGcDLu4c633MTIY=\", false, function () {\n  return [useNavigate];\n});\n_c = ViewTaskComponent;\nexport default ViewTaskComponent;\nvar _c;\n$RefreshReg$(_c, \"ViewTaskComponent\");","map":{"version":3,"names":["React","useState","useEffect","UserService","useNavigate","jsxDEV","_jsxDEV","ViewTaskComponent","ToDoAppTest","_s","navigate","buttonContainerStyle","display","justifyContent","buttonStyle","margin","padding","fontSize","borderRadius","border","cursor","buttonView","backgroundColor","color","task","setTask","viewAllTask","fetchData","response","getTaskByTaskName","taskName","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","taskdetails","id","description","style","onClick","_c","$RefreshReg$"],"sources":["/Users/amacshri/wireframetodoapp/src/components/ViewTaskComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport UserService from '../services/UserService';\nimport { useNavigate } from 'react-router-dom';\n\nconst ViewTaskComponent = ({ ToDoAppTest }) => {\n    const navigate = useNavigate();\n    const buttonContainerStyle = {\n        display: 'flex',\n        justifyContent: 'space-between',\n      };\n      const buttonStyle = {\n        margin: '10px 20px',\n        padding: '15px 20px',\n        fontSize: '16px',\n        borderRadius: '5px',\n        border: 'none',\n        cursor: 'pointer',\n      };\n    const buttonView = {\n        ...buttonStyle,\n    backgroundColor: '#3498db', // Blue color\n    color: '#fff', // White text\n      };\n\n  const [task, setTask] = useState([]);\n\n  const viewAllTask = () => {\n    navigate(`/list/all`);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n          // If taskIdentifier is not a number, fetch by taskName\n         const response = await UserService.getTaskByTaskName(taskName);\n         setTask(response.data);\n        } catch (error) {\n        console.error('Error fetching task:', error);\n        // Handle error, e.g., show an error message to the user\n      }\n    };\n    fetchData();\n  }, [taskName]);\n\n  return (\n    <div>\n      <h3>List of Items for User TaskName: {taskName}</h3>\n      <ul>\n        {task.map((taskdetails) => (\n          <li key={taskdetails.taskName}>\n            <strong>{taskdetails.id}</strong>: {taskdetails.description}\n          </li>\n        ))}\n      </ul>\n      <div style={buttonContainerStyle}>\n      <div>\n      <button style={buttonView} onClick={viewAllTask}>\n        ViewAllTask</button>\n      </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ViewTaskComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}