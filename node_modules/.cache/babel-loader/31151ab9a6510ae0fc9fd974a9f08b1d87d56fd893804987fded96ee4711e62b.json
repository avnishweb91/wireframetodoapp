{"ast":null,"code":"var _jsxFileName = \"/Users/amacshri/wireframetodoapp/src/components/ViewTaskComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport UserService from '../services/UserService';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewTaskComponent = () => {\n  _s();\n  const navigate = useNavigate();\n  const buttonContainerStyle = {\n    display: 'flex',\n    justifyContent: 'space-between'\n  };\n  const buttonStyle = {\n    margin: '10px 20px',\n    padding: '15px 20px',\n    fontSize: '16px',\n    borderRadius: '5px',\n    border: 'none',\n    cursor: 'pointer'\n  };\n  const buttonView = {\n    ...buttonStyle,\n    backgroundColor: '#3498db',\n    // Blue color\n    color: '#fff' // White text\n  };\n  const viewAllTask = () => {\n    navigate(`/list/all`);\n  };\n  const [taskName, setSelectedUserId] = useState('');\n  const [userDetails, setUserDetails] = useState(null);\n  const [userIds, setUserIds] = useState([]);\n\n  // Fetch user IDs when the component mounts\n  useEffect(() => {\n    const fetchUserIds = async () => {\n      try {\n        const response = await UserService.getAllTasks();\n        setUserIds(response.data);\n      } catch (error) {\n        console.error('Error fetching user IDs:', error);\n        // Handle error, e.g., show an error message to the user\n      }\n    };\n    fetchUserIds();\n  }, []);\n\n  // Fetch user details when the selected user ID changes\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      if (taskName) {\n        try {\n          const response = await UserService.getTaskByTaskName(taskName);\n          setUserDetails(response.data);\n        } catch (error) {\n          console.error('Error fetching user details:', error);\n          // Handle error, e.g., show an error message to the user\n        }\n      }\n    };\n    fetchUserDetails();\n  }, [taskName]);\n  const handleSelectChange = event => {\n    setSelectedUserId(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"User Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select User TaskName\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: taskName,\n      onChange: handleSelectChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select an TaskName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), userIds.map(userId => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: taskName,\n        children: JSON.stringify(userId.taskName.stringify)\n      }, userId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), userDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Details for User ID: \", taskName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", userDetails.taskName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: buttonContainerStyle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: buttonView,\n          onClick: viewAllTask,\n          children: \"ViewAllTask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewTaskComponent, \"kwfLN/cPYMhKHHd4r3OwHxGC704=\", false, function () {\n  return [useNavigate];\n});\n_c = ViewTaskComponent;\nexport default ViewTaskComponent;\nvar _c;\n$RefreshReg$(_c, \"ViewTaskComponent\");","map":{"version":3,"names":["React","useState","useEffect","UserService","useNavigate","jsxDEV","_jsxDEV","ViewTaskComponent","_s","navigate","buttonContainerStyle","display","justifyContent","buttonStyle","margin","padding","fontSize","borderRadius","border","cursor","buttonView","backgroundColor","color","viewAllTask","taskName","setSelectedUserId","userDetails","setUserDetails","userIds","setUserIds","fetchUserIds","response","getAllTasks","data","error","console","fetchUserDetails","getTaskByTaskName","handleSelectChange","event","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","userId","JSON","stringify","style","onClick","_c","$RefreshReg$"],"sources":["/Users/amacshri/wireframetodoapp/src/components/ViewTaskComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport UserService from '../services/UserService';\nimport { useNavigate } from 'react-router-dom';\n\nconst ViewTaskComponent = () => {\n    const navigate = useNavigate();\n    const buttonContainerStyle = {\n        display: 'flex',\n        justifyContent: 'space-between',\n      };\n      const buttonStyle = {\n        margin: '10px 20px',\n        padding: '15px 20px',\n        fontSize: '16px',\n        borderRadius: '5px',\n        border: 'none',\n        cursor: 'pointer',\n      };\n    const buttonView = {\n        ...buttonStyle,\n    backgroundColor: '#3498db', // Blue color\n    color: '#fff', // White text\n      };\n\n  const viewAllTask = () => {\n    navigate(`/list/all`);\n  };\n\n  const [taskName, setSelectedUserId] = useState('');\n  const [userDetails, setUserDetails] = useState(null);\n  const [userIds, setUserIds] = useState([]);\n\n  // Fetch user IDs when the component mounts\n  useEffect(() => {\n    const fetchUserIds = async () => {\n      try {\n        const response = await UserService.getAllTasks();\n        setUserIds(response.data);\n      } catch (error) {\n        console.error('Error fetching user IDs:', error);\n        // Handle error, e.g., show an error message to the user\n      }\n    };\n\n    fetchUserIds();\n  }, []);\n\n  // Fetch user details when the selected user ID changes\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      if (taskName) {\n        try {\n          const response = await UserService.getTaskByTaskName(taskName);\n          setUserDetails(response.data);\n        } catch (error) {\n          console.error('Error fetching user details:', error);\n          // Handle error, e.g., show an error message to the user\n        }\n      }\n    };\n\n    fetchUserDetails();\n  }, [taskName]);\n\n  const handleSelectChange = (event) => {\n    setSelectedUserId(event.target.value);\n  };\n\n  return (\n   \n    <div>\n      <h3>User Details</h3>\n      <label>Select User TaskName</label>\n      <select value={taskName} onChange={handleSelectChange}>\n        <option value=\"\">Select an TaskName</option>\n        {userIds.map((userId) => (\n          <option key={userId} value={taskName}>\n            {JSON.stringify(userId.taskName.stringify)}\n          </option>\n        ))}\n      </select>\n\n      {userDetails && (\n        <div>\n          <h4>Details for User ID: {taskName}</h4>\n          <p>Name: {userDetails.taskName}</p>\n          {/* Add more details as needed */}\n        </div>\n      )}\n      <div style={buttonContainerStyle}>\n      <div>\n      <button style={buttonView} onClick={viewAllTask}>\n        ViewAllTask</button>\n      </div>\n      </div>\n   </div>\n  );\n};\n\nexport default ViewTaskComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}