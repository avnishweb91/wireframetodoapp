{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import UserService from'../services/UserService';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const CreateUserComponent=()=>{const navigate=useNavigate();const[task,setTask]=useState({taskName:'',description:'',startDate:'',endDate:'',taskStatus:'',totalEffortReq:''});const handleInputChange=e=>{const{name,value}=e.target;setTask(prevTask=>({...prevTask,[name]:value}));};const saveTask=async()=>{try{await UserService.createTask(task);navigate('/');// Redirect to the task list after adding a task\n}catch(error){console.error('Error adding task:',error);// Handle the error (e.g., show a user-friendly error message)\n}};const cancel=()=>{navigate('/');// Redirect to the task list without adding a task\n};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card col-md-6 offset-md-3 offset-md-3\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-center\",children:\"Add Task\"}),/*#__PURE__*/_jsx(\"div\",{className:\"card-body\",children:/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"TaskName\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Task Name\",name:\"taskName\",className:\"form-control\",value:task.taskName,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"label\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Description\",name:\"description\",className:\"form-control\",value:task.description,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"label\",{children:\"TaskStartDate\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"TaskStartDate\",name:\"startDate\",className:\"form-control\",value:task.startDate,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"label\",{children:\"TaskEndDate\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"TaskEndDate\",name:\"endDate\",className:\"form-control\",value:task.endDate,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"label\",{children:\"TotalEffortRequired\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"TotalEffortRequired\",name:\"totalEffortReq\",className:\"form-control\",value:task.totalEffortReq,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"label\",{children:\"TaskStatus\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"TaskStatus\",name:\"taskStatus\",className:\"form-control\",value:task.taskStatus,onChange:handleInputChange})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-success\",onClick:saveTask,children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-danger\",onClick:cancel,children:\"Back\"})]})})]})})})]});};export default CreateUserComponent;","map":{"version":3,"names":["React","useState","useNavigate","UserService","jsx","_jsx","jsxs","_jsxs","CreateUserComponent","navigate","task","setTask","taskName","description","startDate","endDate","taskStatus","totalEffortReq","handleInputChange","e","name","value","target","prevTask","saveTask","createTask","error","console","cancel","children","className","type","placeholder","onChange","onClick"],"sources":["/Users/amacshri/wireframetodoapp/src/components/CreateUserComponent.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport UserService from '../services/UserService';\n\nconst CreateUserComponent = () => {\n  const navigate = useNavigate();\n\n  const [task, setTask] = useState({\n    taskName: '',\n    description: '',\n    startDate: '',\n    endDate: '',\n    taskStatus: '',\n    totalEffortReq: '',\n  });\n  \n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setTask((prevTask) => ({\n      ...prevTask,\n      [name]: value,\n    }));\n  };\n\n  const saveTask = async () => {\n    try {\n      await UserService.createTask(task);\n      navigate('/'); // Redirect to the task list after adding a task\n    } catch (error) {\n      console.error('Error adding task:', error);\n      // Handle the error (e.g., show a user-friendly error message)\n    }\n  };\n\n  const cancel = () => {\n    navigate('/'); // Redirect to the task list without adding a task\n  };\n\n  \n\n  return (\n    <div>\n      <br />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n            <h3 className=\"text-center\">Add Task</h3>\n            <div className=\"card-body\">\n              <form>\n                {/* ... other form fields ... */}\n                <div className=\"form-group\">\n          <label>TaskName</label>\n          <input\n            type=\"text\"\n            placeholder=\"Task Name\"\n            name=\"taskName\"\n            className=\"form-control\"\n            value={task.taskName}\n            onChange={handleInputChange}\n          />\n          <label>Description</label>\n          <input\n            type=\"text\"\n            placeholder=\"Description\"\n            name=\"description\"\n            className=\"form-control\"\n            value={task.description}\n            onChange={handleInputChange}\n          />\n          <label>TaskStartDate</label>\n          <input\n            type=\"text\"\n            placeholder=\"TaskStartDate\"\n            name=\"startDate\"\n            className=\"form-control\"\n            value={task.startDate}\n            onChange={handleInputChange}\n          />\n          <label>TaskEndDate</label>\n          <input\n            type=\"text\"\n            placeholder=\"TaskEndDate\"\n            name=\"endDate\"\n            className=\"form-control\"\n            value={task.endDate}\n            onChange={handleInputChange}\n          />\n          <label>TotalEffortRequired</label>\n          <input\n            type=\"text\"\n            placeholder=\"TotalEffortRequired\"\n            name=\"totalEffortReq\"\n            className=\"form-control\"\n            value={task.totalEffortReq}\n            onChange={handleInputChange}\n          />\n          <label>TaskStatus</label>\n          <input\n            type=\"text\"\n            placeholder=\"TaskStatus\"\n            name=\"taskStatus\"\n            className=\"form-control\"\n            value={task.taskStatus}\n            onChange={handleInputChange}\n          />\n        </div>\n\n        {/* Repeat similar blocks for other input fields */}\n\n        <button type=\"button\" className=\"btn btn-success\" onClick={saveTask}>\n          Save\n        </button>\n        <button type=\"button\" className=\"btn btn-danger\" onClick={cancel}>\n          Back\n        </button>\n      </form>\n    </div>\n    </div>\n    </div>\n    </div>\n    </div>\n  );\n};\n\nexport default CreateUserComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}