{"ast":null,"code":"import React,{useState,useEffect}from'react';import UserService from'../services/UserService';import{useNavigate}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ViewTaskComponent=()=>{const[selectedTaskName,setSelectedTaskName]=useState('');const[taskDetails,setTaskDetails]=useState(null);const[taskNames,setTaskNames]=useState([]);const navigate=useNavigate();const buttonContainerStyle={display:'flex',justifyContent:'space-between'};const buttonStyle={margin:'10px 20px',padding:'15px 20px',fontSize:'16px',borderRadius:'5px',border:'none',cursor:'pointer'};const buttonView={...buttonStyle,backgroundColor:'#3498db',// Blue color\ncolor:'#fff'// White text\n};useEffect(()=>{const fetchTaskNames=async()=>{try{const response=await UserService.getAllTasks();setTaskNames(response.data);}catch(error){console.error('Error fetching task names:',error);// Handle error, e.g., show an error message to the user\n}};fetchTaskNames();},[]);useEffect(()=>{const fetchTaskDetails=async()=>{const response=await UserService.getAllTasks();setSelectedTaskName(response.data.taskName);if(selectedTaskName){try{const response=await UserService.getTaskByTaskName(selectedTaskName);setTaskDetails(response.data);}catch(error){console.error('Error fetching task details:',error);// Handle error, e.g., show an error message to the user\n}}};fetchTaskDetails();},[selectedTaskName]);const handleSelectChange=event=>{setSelectedTaskName(event.target.value);};const handleGoBack=()=>{navigate('/');};const viewAllTasks=()=>{navigate(\"/list/all\");};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Task Details\"}),/*#__PURE__*/_jsx(\"label\",{children:\"Select TaskName \"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedTaskName,onChange:handleSelectChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a TaskName\"}),taskNames.map(task=>/*#__PURE__*/_jsx(\"option\",{value:task.taskName,children:task.taskName},task.taskName))]}),taskDetails&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{color:'#3498ac'},children:\"Details for Task\"}),/*#__PURE__*/_jsx(\"table\",{style:{width:'100%',borderCollapse:'collapse',marginTop:'10px'},children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{style:{backgroundColor:'#f2f2f2'},children:[/*#__PURE__*/_jsx(\"td\",{style:{padding:'8px',border:'1px solid #ddd'},children:\"ID:\"}),/*#__PURE__*/_jsx(\"td\",{style:{padding:'8px',border:'1px solid #ddd'},children:taskDetails.id})]}),/*#__PURE__*/_jsxs(\"tr\",{style:{backgroundColor:'#f2f2f2'},children:[/*#__PURE__*/_jsx(\"td\",{style:{padding:'8px',border:'1px solid #ddd'},children:\"Start Date:\"}),/*#__PURE__*/_jsx(\"td\",{style:{padding:'8px',border:'1px solid #ddd'},children:taskDetails.startDate})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{style:{padding:'8px',border:'1px solid #ddd'},children:\"End Date:\"}),/*#__PURE__*/_jsx(\"td\",{style:{padding:'8px',border:'1px solid #ddd'},children:taskDetails.endDate})]}),/*#__PURE__*/_jsxs(\"tr\",{style:{backgroundColor:'#f2f2f2'},children:[/*#__PURE__*/_jsx(\"td\",{style:{padding:'8px',border:'1px solid #ddd'},children:\"Task Status:\"}),/*#__PURE__*/_jsx(\"td\",{style:{padding:'8px',border:'1px solid #ddd'},children:taskDetails.taskStatus})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{style:{padding:'8px',border:'1px solid #ddd'},children:\"Total Effort Required:\"}),/*#__PURE__*/_jsx(\"td\",{style:{padding:'8px',border:'1px solid #ddd'},children:taskDetails.totalEffortReq})]})]})})]}),/*#__PURE__*/_jsx(\"div\",{style:buttonContainerStyle,children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{style:buttonView,onClick:viewAllTasks,children:\"View All Tasks\"}),/*#__PURE__*/_jsx(\"button\",{style:buttonView,onClick:handleGoBack,children:\"Back\"})]})})]});};export default ViewTaskComponent;","map":{"version":3,"names":["React","useState","useEffect","UserService","useNavigate","jsx","_jsx","jsxs","_jsxs","ViewTaskComponent","selectedTaskName","setSelectedTaskName","taskDetails","setTaskDetails","taskNames","setTaskNames","navigate","buttonContainerStyle","display","justifyContent","buttonStyle","margin","padding","fontSize","borderRadius","border","cursor","buttonView","backgroundColor","color","fetchTaskNames","response","getAllTasks","data","error","console","fetchTaskDetails","taskName","getTaskByTaskName","handleSelectChange","event","target","value","handleGoBack","viewAllTasks","children","onChange","map","task","style","width","borderCollapse","marginTop","id","startDate","endDate","taskStatus","totalEffortReq","onClick"],"sources":["/Users/amacshri/wireframetodoapp/src/components/ViewTaskComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport UserService from '../services/UserService';\nimport { useNavigate } from 'react-router-dom';\n\nconst ViewTaskComponent = () => {\n\n  const [selectedTaskName, setSelectedTaskName] = useState('');\n  const [taskDetails, setTaskDetails] = useState(null);\n  const [taskNames, setTaskNames] = useState([]);\n  const navigate = useNavigate();\n  \n  const buttonContainerStyle = {\n    display: 'flex',\n    justifyContent: 'space-between',\n  };\n\n  const buttonStyle = {\n    margin: '10px 20px',\n    padding: '15px 20px',\n    fontSize: '16px',\n    borderRadius: '5px',\n    border: 'none',\n    cursor: 'pointer',\n  };\n\n  const buttonView = {\n    ...buttonStyle,\n    backgroundColor: '#3498db', // Blue color\n    color: '#fff', // White text\n  };\n\n  useEffect(() => {\n    const fetchTaskNames = async () => {\n      try {\n        const response = await UserService.getAllTasks();\n        setTaskNames(response.data);\n      } catch (error) {\n        console.error('Error fetching task names:', error);\n        // Handle error, e.g., show an error message to the user\n      }\n    };\n\n    fetchTaskNames();\n  }, []);\n\n  useEffect(() => {\n    const fetchTaskDetails = async () => {\n      const response = await UserService.getAllTasks();\n      setSelectedTaskName(response.data.taskName);\n      if (selectedTaskName) {\n        try {\n          const response = await UserService.getTaskByTaskName(selectedTaskName);\n          setTaskDetails(response.data);\n        } catch (error) {\n          console.error('Error fetching task details:', error);\n          // Handle error, e.g., show an error message to the user\n        }\n      }\n    };\n\n    fetchTaskDetails();\n  }, [selectedTaskName]);\n\n  const handleSelectChange = (event) => {\n    setSelectedTaskName(event.target.value);\n  };\n  \n  const handleGoBack = () => {\n    navigate('/');\n    };\n\n  const viewAllTasks = () => {\n    navigate(`/list/all`);\n  };\n\n  return (\n    <div>\n      <h3>Task Details</h3>\n      <label>Select TaskName </label>\n      <select value={selectedTaskName} onChange={handleSelectChange}>\n        <option value=\"\">Select a TaskName</option>\n        {taskNames.map((task) => (\n          <option key={task.taskName} value={task.taskName}>\n            {task.taskName}\n          </option>\n        ))}\n      </select>\n\n {taskDetails && (\n  <div>\n    <h4 style={{ color: '#3498ac' }}>Details for Task</h4>\n    <table style={{ width: '100%', borderCollapse: 'collapse', marginTop: '10px' }}>\n      <tbody>\n        <tr style={{ backgroundColor: '#f2f2f2' }}>\n          <td style={{ padding: '8px', border: '1px solid #ddd' }}>ID:</td>\n          <td style={{ padding: '8px', border: '1px solid #ddd' }}>{taskDetails.id}</td>\n        </tr>\n        <tr style={{ backgroundColor: '#f2f2f2' }}>\n          <td style={{ padding: '8px', border: '1px solid #ddd' }}>Start Date:</td>\n          <td style={{ padding: '8px', border: '1px solid #ddd' }}>{taskDetails.startDate}</td>\n        </tr>\n        <tr>\n          <td style={{ padding: '8px', border: '1px solid #ddd' }}>End Date:</td>\n          <td style={{ padding: '8px', border: '1px solid #ddd' }}>{taskDetails.endDate}</td>\n        </tr>\n        <tr style={{ backgroundColor: '#f2f2f2' }}>\n          <td style={{ padding: '8px', border: '1px solid #ddd' }}>Task Status:</td>\n          <td style={{ padding: '8px', border: '1px solid #ddd' }}>{taskDetails.taskStatus}</td>\n        </tr>\n        <tr>\n          <td style={{ padding: '8px', border: '1px solid #ddd' }}>Total Effort Required:</td>\n          <td style={{ padding: '8px', border: '1px solid #ddd' }}>{taskDetails.totalEffortReq}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n)}\n  <div style={buttonContainerStyle}>\n    <div>\n      <button style={buttonView} onClick={viewAllTasks}>\n            View All Tasks\n      </button>\n      <button style={buttonView} onClick={handleGoBack}>\n            Back\n      </button>\n    </div>\n  </div>\n</div>\n);};\n\nexport default ViewTaskComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}